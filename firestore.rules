// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {


    //  Allow each user to manage only their own profile document
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create:               if request.auth.uid != null;
    }

    match /books/{bookId} {
      allow read: if true;  // Anyone can read books
      allow create: if request.auth != null;  // Logged in users can create books
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.ownerId;  // Only book owners can update/delete
    }

    match /{document=**} {
      allow read, write: if false;
    }

    /* ───── swaps collection ───── */
    match /swaps/{swapId} {
      allow read:   if isParty();
      allow create: if request.auth.uid == request.resource.data.borrowerId;
      allow update: if isParty() &&
                    request.resource.data.status in ['accepted', 'declined'];

      function isParty() {
        return request.auth != null &&
               (request.auth.uid == resource.data.ownerId ||
                request.auth.uid == resource.data.borrowerId);
      }

      /* per-swap notes sub-collection */
      match /notes/{noteId} {
        allow read, create: if isParty();
      }
    }

    /* add your /books rules or other collections here */
  }
}
